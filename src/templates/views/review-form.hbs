<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Customer Reviews</title>
    <style>
        /* General Styles */
body {
    font-family: Arial, sans-serif;
    background: #f8f9fa;
    margin: 0;
    padding: 20px;
    text-align: center;
}

/* Review Section */
.review-section {
    background: white;
    max-width: 500px;
    margin: auto;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

/* Star Rating */
.stars {
    display: flex;
    justify-content: center;
    margin-bottom: 10px;
}

.star {
    font-size: 30px;
    cursor: pointer;
    color: #ccc;
    transition: color 0.2s;
}

.star:hover,
.star.active {
    color: gold;
}

/* Text Area */
textarea {
    width: 100%;
    height: 80px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 14px;
    margin-bottom: 10px;
}

/* Submit Button */
button {
    background: #007bff;
    color: white;
    border: none;
    padding: 10px 15px;
    font-size: 16px;
    cursor: pointer;
    border-radius: 5px;
    width: 100%;
}

button:hover {
    background: #0056b3;
}

/* Reviews Display */
#reviewsContainer {
    margin-top: 20px;
    padding: 10px;
    text-align: left;
}

.review {
    background: #f1f1f1;
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 5px;
}

.review .rating {
    color: gold;
}

.review .text {
    margin-top: 5px;
}

    </style>
</head>
<body>

    <section class="review-section">
        <h2>Leave a Review</h2>

        <div class="stars">
            <span class="star" data-value="1">★</span>
            <span class="star" data-value="2">★</span>
            <span class="star" data-value="3">★</span>
            <span class="star" data-value="4">★</span>
            <span class="star" data-value="5">★</span>
        </div>

        <textarea id="reviewText" placeholder="Write your review here..."></textarea>
        <button id="submitReview">Submit Review</button>

        <h3>Customer Reviews</h3>
        <div id="reviewsContainer">No reviews available.</div>
    </section>

    <script>
const API_URL = "http://localhost:8000/reviews";
const LOGIN_PAGE = "http://localhost:8000/login"; // Update this to your actual login page

const stars = document.querySelectorAll(".star");
const reviewText = document.getElementById("reviewText");
const submitReview = document.getElementById("submitReview");
const reviewsContainer = document.getElementById("reviewsContainer");

let selectedRating = 0;

// Function to check if user is logged in
function isUserLoggedIn() {
    return localStorage.getItem("user") !== null; // Check if token exists (Assuming JWT authentication)
}

// Redirect to login if not logged in
function redirectToLogin() {
    alert("You must be logged in to submit a review!");
    window.location.href = LOGIN_PAGE;
}

// Handle star click
stars.forEach(star => {
    star.addEventListener("click", () => {
        selectedRating = star.getAttribute("data-value");
        updateStars(selectedRating);
    });
});

// Update star styles
function updateStars(rating) {
    stars.forEach(star => {
        star.classList.remove("active");
        if (star.getAttribute("data-value") <= rating) {
            star.classList.add("active");
        }
    });
}

// Fetch and display reviews
async function loadReviews() {
    try {
        const response = await fetch(API_URL);
        const reviews = await response.json();

        // Filter only approved reviews
        const approvedReviews = reviews.filter(r => r.status === "approved");

        reviewsContainer.innerHTML = approvedReviews.length
            ? approvedReviews.map(r => 
                `<div class="review">
                    <div class="text"><strong>Name:</strong> ${r.name}</div>
                    <div class="text"><strong>Email:</strong> ${r.email}</div>
                    <div class="rating">${"★".repeat(r.rating)}${"☆".repeat(5 - r.rating)}</div>
                    <div class="text"><strong>Review:</strong> ${r.text}</div>
                </div>`
            ).join("")
            : "No approved reviews available.";
    } catch (error) {
        console.error("Error fetching reviews:", error);
    }
}

// Handle review submission
submitReview.addEventListener("click", async () => {
    if (!isUserLoggedIn()) {
        redirectToLogin();
        return;
    }

    const text = reviewText.value.trim();
    if (!selectedRating || !text) {
        alert("Please provide a rating and review!");
        return;
    }

    try {
        // Get user info from localStorage
        const user = JSON.parse(localStorage.getItem("user")); // Ensure stored as JSON
        if (!user || !user.name || !user.email) {
            alert("User information is missing. Please log in again.");
            redirectToLogin();
            return;
        }

        const response = await fetch(API_URL, {
            method: "POST",
            headers: { 
                "Content-Type": "application/json",
                "Authorization": `Bearer ${localStorage.getItem("userToken")}` // Assuming token is stored separately
            },
            body: JSON.stringify({ 
                name: user.name, 
                email: user.email, 
                rating: selectedRating, 
                text 
            })
        });

        if (!response.ok) throw new Error("Failed to submit review");

        reviewText.value = "";
        updateStars(0);
        selectedRating = 0;
        loadReviews();
    } catch (error) {
        console.error("Error submitting review:", error);
    }
});

// Load reviews on page load
loadReviews();


    </script>
</body>
</html>
