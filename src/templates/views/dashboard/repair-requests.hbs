<html lang="en">

  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, 
                   initial-scale=1.0"
    />
    <title>Dashboard</title>
    <link rel="stylesheet" href="../css/dashboard.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

  </head>

  <style>
    .repair-table { width: 100%; border-collapse: collapse; margin-top: 10px; }
    .repair-table th, .repair-table td { border: 1px solid #ddd; padding: 10px;
    text-align: left; } .repair-table th { background-color: #f4f4f4; } .status
    { font-weight: bold; text-transform: capitalize; } .status.pending { color:
    orange; } .status.completed { color: green; } .status.cancelled { color:
    red; }

    .modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
  background-color: #fff;
  margin: 10% auto;
  padding: 20px;
  border: 1px solid #888;
  width: 50%;
  text-align: left;
}

.close-btn {
  float: right;
  font-size: 28px;
  cursor: pointer;
}

  </style>
  <body>

    <!-- for header part -->
   {{>dashboardHeader}}

    <div class="main-container">
     {{>dashboardSidebar}}
      <div class="main">

        <div class="searchbar2">
          <input type="text" name="" id="" placeholder="Search" />
          <div class="searchbtn">
            <img
              src="https://media.geeksforgeeks.org/wp-content/uploads/20221210180758/Untitled-design-(28).png"
              class="icn srchicn"
              alt="search-button"
            />
          </div>
        </div>

      <div class="report-container">
          <div class="report-header">
            <h1 class="recent-requests">Total Repairing Requests</h1>
          </div>

          <div class="report-body">
            <table class="repair-table">
              <thead>
             <th>Customer Name</th>
    <th>Email</th>
    <th>Service Name</th>
    <th>Service Price</th>
    <th>Address</th>
    <th>Status</th>
      <th>Summery</th>
              </thead>
              <tbody id="booking-list">
                <!-- Data will be inserted here -->
              </tbody>
            </table>
          </div>
        </div>

      </div>
    </div>



    <div id="details-modal" class="modal">
  <div class="modal-content">
    <span class="close-btn">&times;</span>
    <h2>Booking Details</h2>
    <p><strong>Name:</strong> <span id="modal-name"></span></p>
    <p><strong>Phone:</strong> <span id="modal-phone"></span></p>
    <p><strong>Email:</strong> <span id="modal-email"></span></p>
    <p><strong>Service Type:</strong> <span id="modal-service"></span></p>
    <p><strong>Special Request:</strong> <span id="modal-request"></span></p>
    <p><strong>Service Date:</strong> <span id="modal-date"></span></p>
    <p><strong>Location:</strong> <span id="modal-location"></span></p>
    
    <label for="status">Update Status:</label>
    <select id="status">
      <option value="Pending">Pending</option>
      <option value="In Progress">In Progress</option>
      <option value="Completed">Completed</option>
      <option value="Cancelled">Cancelled</option>
    </select>
    
    <button id="update-status-btn">Update Status</button>
  </div>
</div>




<script>
    function displayBookings(bookings) {
      console.log(bookings)
      const bookingList = document.getElementById("booking-list");
      bookingList.innerHTML = ""; // Clear previous data
    
      bookings.forEach(booking => {
        const row = document.createElement("tr");
    
        row.innerHTML = `
          <td>${booking.name}</td>
          <td>${booking.email || "N/A"}</td>
          <td>${booking.serviceName || "N/A"}</td>
          <td>${booking.servicePrice ? `Rs. ${booking.servicePrice}` : "N/A"}</td>
          <td>
            ${booking.address?.line1 || ""}, 
            ${booking.address?.line2 || ""}, 
            ${booking.address?.city || ""}, 
            ${booking.address?.postal_code || ""}
          </td>
          
          <td>
        <select class="status-select" data-id="${booking._id}">
          <option value="pending" ${booking.status === 'pending' ? 'selected' : ''}>Pending</option>
          <option value="rejected" ${booking.status === 'rejected' ? 'selected' : ''}>Rejected</option>
          <option value="success" ${booking.status === 'success' ? 'selected' : ''}>Success</option>
        </select>
      </td>
      <td>
  <button onclick="generatePDF(${JSON.stringify(booking).replace(/"/g, '&quot;')})">Print</button>
</td>

        `;
    
        bookingList.appendChild(row);
      });
    }
    
    async function fetchBookings(){
        try{
           const response = await fetch("http://localhost:8000/api/customers");
             const bookings = await response.json();
         bookingsData = bookings;
         displayBookings(bookings)
        }
        catch(error){
             console.error("Error fetching bookings:", error);
        }
        }
        document.addEventListener("DOMContentLoaded", () => {
    fetchBookings();
    });
    
    document.addEventListener("change", async function (e) {
  if (e.target.classList.contains("status-select")) {
    const bookingId = e.target.dataset.id;
    const newStatus = e.target.value;

    try {
      const res = await fetch(`http://localhost:8000/api/${bookingId}/status`, {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ status: newStatus }),
      });

      const data = await res.json();
      if (res.ok) {
        alert("Status updated successfully.");
      } else {
        alert("Failed to update status: " + data.error);
      }
    } catch (err) {
      console.error(err);
      alert("Something went wrong.");
    }
  }
});


async function generatePDF(user) {
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();

  // Add company name as header
  doc.setFontSize(18);
  doc.text("RepairHub - Service Booking Summary", 105, 20, null, null, "center");

  // Add a horizontal line
  doc.setLineWidth(0.5);
  doc.line(20, 25, 190, 25);

  // Booking Details Title
  doc.setFontSize(14);
  doc.text("Customer Booking Details", 20, 35);

  // Set content font
  doc.setFontSize(12);
  let y = 45;

  const lines = [
    [`Name`, user.name],
    [`Email`, user.email],
    [`Phone`, user.phone || "N/A"],
    [`Service Name`, user.serviceName],
    [`Service Price`, `Rs. ${user.servicePrice}`],
    [`Address`, `${user.address?.line1 || ""}, ${user.address?.line2 || ""}, ${user.address?.city || ""}, ${user.address?.postal_code || ""}`],
    [`Status`, user.status],
  ];

  lines.forEach(([label, value]) => {
    doc.text(`${label}:`, 20, y);
    doc.text(String(value), 70, y);
    y += 10;
  });

  // Save the file
  doc.save(`${user.name.replace(/\s+/g, "_")}_Service_Booking.pdf`);
}

</script>
 
     <script src="../js/dashboard/script.js"></script>
  </body>
</html>